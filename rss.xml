<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>BlockByte</title><link>http://kirbyfan64.github.io/</link><description>Random programming tidbits/tutorials</description><language>en</language><lastBuildDate>Sun, 17 May 2015 18:16:21 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Functional programming isn't the answer to all problems (and neither is OOP)</title><link>http://kirbyfan64.github.io/posts/functional-programming-isnt-the-answer-to-all-problems-and-neither-is-oop.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;I like functional programming. Being a big fan of Python and C++, it took a while to get used to functional languages like Haskell and Felix (my personal favorite FP language). I started out with &lt;em&gt;Learn You a Haskell for Great Good!&lt;/em&gt; and then started toying with OCaml and Felix. I stuck with Felix and ditched OCaml because I just didn't like it.&lt;/p&gt;
&lt;p&gt;However, it isn't the solution to the world's issues. People used to think OOP was the solution to everything. They started shoving every freaking thing on earth in a class and adding useless methods. Then they realized that Java sucked. Now, everyone seems to think that FP is going to take over the world. I disagree. Why?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://kirbyfan64.github.io/posts/functional-programming-isnt-the-answer-to-all-problems-and-neither-is-oop.html"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;</description><guid>http://kirbyfan64.github.io/posts/functional-programming-isnt-the-answer-to-all-problems-and-neither-is-oop.html</guid><pubDate>Sun, 17 May 2015 21:59:00 GMT</pubDate></item><item><title>The top 5 programming languages you've never heard of (part 2)</title><link>http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of-part-2.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;Yesterday, I wrote a post about &lt;a class="reference external" href="http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of.html"&gt;the top 5 programming languages you've never heard of&lt;/a&gt;. Well, since it was kind of short (I didn't have too much time to write), I'm going to put a little more info here.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of-part-2.html"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;</description><category>compilers</category><category>felix</category><category>k</category><category>languages</category><category>myrddin</category><category>nim</category><category>objeck</category><category>programming</category><guid>http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of-part-2.html</guid><pubDate>Sun, 08 Mar 2015 22:04:17 GMT</pubDate></item><item><title>The top 5 programming Languages you've never heard of</title><link>http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;Lately, there's been a large surge in new programming languages as projects such as &lt;a class="reference external" href="http://www.rust-lang.org/"&gt;Rust&lt;/a&gt; have been taking the spotlight and showing lots of promise. However, there are some programming languages few have heard of that deserve to be more popular. Here's a brief listing of some of my favorite languages that aren't common sights.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;</description><category>compilers</category><category>felix</category><category>k</category><category>languages</category><category>myrddin</category><category>nim</category><category>objeck</category><category>programming</category><guid>http://kirbyfan64.github.io/posts/the-top-5-programming-languages-youve-never-heard-of.html</guid><pubDate>Sun, 08 Mar 2015 00:56:29 GMT</pubDate></item><item><title>Using AppVeyor to distribute Python wheels</title><link>http://kirbyfan64.github.io/posts/using-appveyor-to-distribute-python-wheels.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;&lt;a class="reference external" href="http://wheel.readthedocs.org/en/latest/"&gt;Wheels&lt;/a&gt; are the future of distribution. No more messy broken &lt;cite&gt;setup.py&lt;/cite&gt; scripts or need for a compiler to build C extensions! Of course, this has a glaring issue: a Linux user can't build Wheels of their C extension for Windows. Unless, of course, you use &lt;a class="reference external" href="https://travis-ci.org/"&gt;Travis CI&lt;/a&gt;, install the MinGW compilers, define the compiler variables, etc. However, there is an easier way: &lt;a class="reference external" href="http://kirbyfan64.github.io/posts/www.appveyor.com"&gt;AppVeyor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://kirbyfan64.github.io/posts/using-appveyor-to-distribute-python-wheels.html"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;</description><category>appveyor</category><category>ci</category><category>python</category><category>wheels</category><guid>http://kirbyfan64.github.io/posts/using-appveyor-to-distribute-python-wheels.html</guid><pubDate>Sun, 21 Sep 2014 22:02:14 GMT</pubDate></item><item><title>Overloading functions with the C preprocessor</title><link>http://kirbyfan64.github.io/posts/overloading-functions-with-the-c-preprocessor.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;Let's have an imaginary scenario: you're trying to make a library that has a special function, &lt;em&gt;myfunc&lt;/em&gt;. Now, this functions needs to have two possible ways to invoke it. One way takes one int parameter, the other takes two. Here's how you might do that in C++:&lt;/p&gt;
&lt;pre class="code c++ literal-block"&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myfunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myfunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;C doesn't have a way to do this. You'll often see code like this:&lt;/p&gt;
&lt;pre class="code c literal-block"&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myfunc_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;myfunc_2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;However, this &lt;em&gt;can&lt;/em&gt; be implemented, albeit in a slightly convoluted way using a very controversial tool: the C preprocessor.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://kirbyfan64.github.io/posts/overloading-functions-with-the-c-preprocessor.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;</description><category>c preprocessor hack</category><guid>http://kirbyfan64.github.io/posts/overloading-functions-with-the-c-preprocessor.html</guid><pubDate>Tue, 16 Sep 2014 01:42:34 GMT</pubDate></item><item><title>Welcome!</title><link>http://kirbyfan64.github.io/posts/welcome.html</link><dc:creator>Ryan Gonzalez</dc:creator><description>&lt;p&gt;First post!&lt;/p&gt;
&lt;p&gt;This website is my first ever web page. It's written using the excellent &lt;a class="reference external" href="http://getnikola.com"&gt;Nikola&lt;/a&gt; and reStructuredText. The majority of its content is going to revolve around programming: tutorials, experiments, and lots and lots of rants. :)&lt;/p&gt;
&lt;p&gt;Have fun browsing!&lt;/p&gt;</description><guid>http://kirbyfan64.github.io/posts/welcome.html</guid><pubDate>Wed, 10 Sep 2014 23:02:45 GMT</pubDate></item></channel></rss>